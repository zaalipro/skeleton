/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/auth.ts":
/*!*********************!*\
  !*** ./src/auth.ts ***!
  \*********************/
/***/ (() => {

eval("\ndocument.addEventListener('DOMContentLoaded', () => {\n    const loginForm = document.getElementById('login-form');\n    const registerForm = document.getElementById('register-form');\n    const showLoginBtn = document.getElementById('show-login');\n    const showRegisterBtn = document.getElementById('show-register');\n    const loginError = document.getElementById('login-error');\n    const registerError = document.getElementById('register-error');\n    const appContainer = document.getElementById('app-container');\n    function setAuthorized(isAuthorized) {\n        if (isAuthorized) {\n            localStorage.setItem('authorized', 'true');\n            authContainer.style.display = 'none';\n            appContainer.classList.remove('hidden');\n            renderApp();\n        }\n        else {\n            localStorage.removeItem('authorized');\n            authContainer.style.display = 'block';\n            appContainer.classList.add('hidden');\n            appContainer.innerHTML = '';\n        }\n    }\n    function renderApp() {\n        appContainer.innerHTML = `\n      <div class=\"flex flex-col gap-4\">\n        <button id=\"logout-btn\" class=\"btn btn-error btn-sm self-end\">Logout</button>\n        <div class=\"text-center text-lg font-semibold text-primary mb-2\">Welcome to your Personal Finance Tracker!</div>\n        <div id=\"finance-tracker-root\"></div>\n      </div>\n    `;\n        document.getElementById('logout-btn').addEventListener('click', () => setAuthorized(false));\n        renderFinanceTracker();\n    }\n    function renderFinanceTracker() {\n        const root = document.getElementById('finance-tracker-root');\n        root.innerHTML = `\n      <form id=\"expense-form\" class=\"flex flex-col gap-2 mb-4\">\n        <div class=\"flex gap-2\">\n          <input id=\"expense-amount\" type=\"number\" min=\"0.01\" step=\"0.01\" placeholder=\"Amount\" required class=\"input input-bordered w-full\" />\n          <input id=\"expense-category\" type=\"text\" placeholder=\"Category\" required class=\"input input-bordered w-full\" />\n        </div>\n        <input id=\"expense-note\" type=\"text\" placeholder=\"Note (optional)\" class=\"input input-bordered w-full\" />\n        <button type=\"submit\" class=\"btn btn-primary\">Add Expense</button>\n      </form>\n      <div id=\"expenses-list\" class=\"mb-2\"></div>\n      <div id=\"total-expenses\" class=\"text-right font-bold text-primary\"></div>\n    `;\n        const form = document.getElementById('expense-form');\n        form.addEventListener('submit', handleAddExpense);\n        renderExpenses();\n    }\n    function getExpenses() {\n        try {\n            return JSON.parse(localStorage.getItem('expenses') || '[]');\n        }\n        catch (_a) {\n            return [];\n        }\n    }\n    function setExpenses(expenses) {\n        localStorage.setItem('expenses', JSON.stringify(expenses));\n    }\n    function handleAddExpense(e) {\n        e.preventDefault();\n        const amount = parseFloat(document.getElementById('expense-amount').value);\n        const category = document.getElementById('expense-category').value.trim();\n        const note = document.getElementById('expense-note').value.trim();\n        if (!amount || !category)\n            return;\n        const expenses = getExpenses();\n        expenses.push({ amount, category, note, date: new Date().toISOString() });\n        setExpenses(expenses);\n        document.getElementById('expense-amount').value = '';\n        document.getElementById('expense-category').value = '';\n        document.getElementById('expense-note').value = '';\n        renderExpenses();\n    }\n    function renderExpenses() {\n        const expenses = getExpenses();\n        const list = document.getElementById('expenses-list');\n        if (expenses.length === 0) {\n            list.innerHTML = '<div class=\"text-base-content text-center\">No expenses yet.</div>';\n        }\n        else {\n            list.innerHTML = `\n        <div class=\"divide-y\">\n          ${expenses.map(e => `\n            <div class=\"flex justify-between items-center py-2\">\n              <div>\n                <div class=\"font-medium\">$${e.amount.toFixed(2)} <span class=\"text-xs text-base-content\">${e.category}</span></div>\n                ${e.note ? `<div class=\"text-xs text-base-content\">${e.note}</div>` : ''}\n                <div class=\"text-xs text-base-content\">${new Date(e.date).toLocaleString()}</div>\n              </div>\n            </div>\n          `).join('')}\n        </div>\n      `;\n        }\n        const total = expenses.reduce((sum, e) => sum + e.amount, 0);\n        document.getElementById('total-expenses').textContent = `Total: $${total.toFixed(2)}`;\n    }\n    function showLogin() {\n        loginForm.style.display = 'block';\n        registerForm.style.display = 'none';\n        loginError.textContent = '';\n        registerError.textContent = '';\n    }\n    function showRegister() {\n        loginForm.style.display = 'none';\n        registerForm.style.display = 'block';\n        loginError.textContent = '';\n        registerError.textContent = '';\n    }\n    showLoginBtn.addEventListener('click', showLogin);\n    showRegisterBtn.addEventListener('click', showRegister);\n    // Show login by default if not authorized\n    const authContainer = document.getElementById('auth-container');\n    if (localStorage.getItem('authorized') === 'true') {\n        setAuthorized(true);\n    }\n    else {\n        setAuthorized(false);\n        showLogin();\n    }\n    loginForm.addEventListener('submit', (e) => {\n        e.preventDefault();\n        const email = document.getElementById('login-email').value;\n        const password = document.getElementById('login-password').value;\n        if (!email || !password) {\n            loginError.textContent = 'Please enter both email and password.';\n            return;\n        }\n        // Simulate login (replace with real logic)\n        if (email === 'test@example.com' && password === 'password') {\n            loginError.textContent = 'Login successful!';\n            loginError.style.color = 'green';\n            setTimeout(() => setAuthorized(true), 500);\n        }\n        else {\n            loginError.textContent = 'Invalid credentials.';\n            loginError.style.color = 'red';\n        }\n    });\n    registerForm.addEventListener('submit', (e) => {\n        e.preventDefault();\n        const username = document.getElementById('register-username').value;\n        const email = document.getElementById('register-email').value;\n        const password = document.getElementById('register-password').value;\n        const confirm = document.getElementById('register-confirm').value;\n        if (!username || !email || !password || !confirm) {\n            registerError.textContent = 'All fields are required.';\n            return;\n        }\n        if (password !== confirm) {\n            registerError.textContent = 'Passwords do not match.';\n            return;\n        }\n        // Simulate registration (replace with real logic)\n        registerError.textContent = 'Registration successful!';\n        registerError.style.color = 'green';\n        setTimeout(() => setAuthorized(true), 500);\n    });\n});\n\n\n//# sourceURL=webpack://skeleton/./src/auth.ts?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/auth.ts"]();
/******/ 	
/******/ })()
;